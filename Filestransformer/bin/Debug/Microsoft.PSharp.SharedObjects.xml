<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.PSharp.SharedObjects</name>
    </assembly>
    <members>
        <member name="T:Microsoft.PSharp.SharedObjects.ISharedCounter">
            <summary>
            Interface of a shared counter.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ISharedCounter.Increment">
            <summary>
            Increments the shared counter.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ISharedCounter.Decrement">
            <summary>
            Decrements the shared counter.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ISharedCounter.GetValue">
            <summary>
            Gets the current value of the shared counter.
            </summary>
            <returns>Current value</returns>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ISharedCounter.Add(System.Int32)">
            <summary>
            Adds a value to the counter atomically.
            </summary>
            <param name="value">Value to add</param>
            <returns>The new value of the counter</returns>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ISharedCounter.Exchange(System.Int32)">
            <summary>
            Sets the counter to a value atomically.
            </summary>
            <param name="value">Value to set</param>
            <returns>The original value of the counter</returns>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ISharedCounter.CompareExchange(System.Int32,System.Int32)">
            <summary>
            Sets the counter to a value atomically if it is equal to a given value.
            </summary>
            <param name="value">Value to set</param>
            <param name="comparand">Value to compare against</param>
            <returns>The original value of the counter</returns>
        </member>
        <member name="T:Microsoft.PSharp.SharedObjects.MockSharedCounter">
            <summary>
            A wrapper for a shared counter modeled using a state-machine for testing.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.SharedObjects.MockSharedCounter.CounterMachine">
            <summary>
            Machine modeling the shared counter.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.SharedObjects.MockSharedCounter.Runtime">
            <summary>
            The testing runtime hosting this shared counter.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.MockSharedCounter.#ctor(System.Int32,Microsoft.PSharp.TestingServices.Runtime.SystematicTestingRuntime)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.SharedObjects.MockSharedCounter"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.MockSharedCounter.Increment">
            <summary>
            Increments the shared counter.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.MockSharedCounter.Decrement">
            <summary>
            Decrements the shared counter.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.MockSharedCounter.GetValue">
            <summary>
            Gets the current value of the shared counter.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.MockSharedCounter.Add(System.Int32)">
            <summary>
            Adds a value to the counter atomically.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.MockSharedCounter.Exchange(System.Int32)">
            <summary>
            Sets the counter to a value atomically.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.MockSharedCounter.CompareExchange(System.Int32,System.Int32)">
            <summary>
            Sets the counter to a value atomically if it is equal to a given value.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.SharedObjects.ProductionSharedCounter">
            <summary>
            Implements a shared counter to be used in production.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.SharedObjects.ProductionSharedCounter.Counter">
            <summary>
            The value of the shared counter.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ProductionSharedCounter.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.SharedObjects.ProductionSharedCounter"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ProductionSharedCounter.Increment">
            <summary>
            Increments the shared counter.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ProductionSharedCounter.Decrement">
            <summary>
            Decrements the shared counter.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ProductionSharedCounter.GetValue">
            <summary>
            Gets the current value of the shared counter.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ProductionSharedCounter.Add(System.Int32)">
            <summary>
            Adds a value to the counter atomically.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ProductionSharedCounter.Exchange(System.Int32)">
            <summary>
            Sets the counter to a value atomically.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ProductionSharedCounter.CompareExchange(System.Int32,System.Int32)">
            <summary>
            Sets the counter to a value atomically if it is equal to a given value.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.SharedObjects.SharedCounter">
            <summary>
            Shared counter that can be safely shared by multiple P# machines.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedCounter.Create(Microsoft.PSharp.IMachineRuntime,System.Int32)">
            <summary>
            Creates a new shared counter.
            </summary>
            <param name="runtime">The machine runtime.</param>
            <param name="value">The initial value.</param>
        </member>
        <member name="T:Microsoft.PSharp.SharedObjects.SharedCounterEvent">
            <summary>
            Event used to communicate with a shared counter machine.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.SharedObjects.SharedCounterEvent.SharedCounterOperation">
            <summary>
            Supported shared counter operations.
            </summary>
        </member>
        <member name="P:Microsoft.PSharp.SharedObjects.SharedCounterEvent.Operation">
            <summary>
            The operation stored in this event.
            </summary>
        </member>
        <member name="P:Microsoft.PSharp.SharedObjects.SharedCounterEvent.Value">
            <summary>
            The shared counter value stored in this event.
            </summary>
        </member>
        <member name="P:Microsoft.PSharp.SharedObjects.SharedCounterEvent.Comparand">
            <summary>
            Comparand value stored in this event.
            </summary>
        </member>
        <member name="P:Microsoft.PSharp.SharedObjects.SharedCounterEvent.Sender">
            <summary>
            The sender machine stored in this event.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedCounterEvent.#ctor(Microsoft.PSharp.SharedObjects.SharedCounterEvent.SharedCounterOperation,System.Int32,System.Int32,Microsoft.PSharp.MachineId)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.SharedObjects.SharedCounterEvent"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedCounterEvent.IncrementEvent">
            <summary>
            Creates a new event for the 'INC' operation.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedCounterEvent.DecrementEvent">
            <summary>
            Creates a new event for the 'DEC' operation.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedCounterEvent.SetEvent(Microsoft.PSharp.MachineId,System.Int32)">
            <summary>
            Creates a new event for the 'SET' operation.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedCounterEvent.GetEvent(Microsoft.PSharp.MachineId)">
            <summary>
            Creates a new event for the 'GET' operation.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedCounterEvent.AddEvent(Microsoft.PSharp.MachineId,System.Int32)">
            <summary>
            Creates a new event for the 'ADD' operation.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedCounterEvent.CasEvent(Microsoft.PSharp.MachineId,System.Int32,System.Int32)">
            <summary>
            Creates a new event for the 'CAS' operation.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.SharedObjects.SharedCounterMachine">
            <summary>
            A shared counter modeled using a state-machine for testing.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.SharedObjects.SharedCounterMachine.Counter">
            <summary>
            The value of the shared counter.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.SharedObjects.SharedCounterMachine.Init">
            <summary>
            The start state of this machine.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedCounterMachine.Initialize">
            <summary>
            Initializes the machine.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedCounterMachine.ProcessEvent">
            <summary>
            Processes the next dequeued event.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.SharedObjects.SharedCounterResponseEvent">
            <summary>
            Event containing the value of a shared counter.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.SharedObjects.SharedCounterResponseEvent.Value">
            <summary>
            Value.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedCounterResponseEvent.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.SharedObjects.SharedCounterResponseEvent"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.SharedObjects.ISharedDictionary`2">
            <summary>
            Interface of a shared dictionary.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ISharedDictionary`2.TryAdd(`0,`1)">
            <summary>
            Adds a new key to the dictionary, if it doesn’t already exist in the dictionary.
            </summary>
            <param name="key">Key</param>
            <param name="value">Value</param>
            <returns>True or false depending on whether the new key/value pair was added.</returns>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ISharedDictionary`2.TryUpdate(`0,`1,`1)">
            <summary>
            Updates the value for an existing key in the dictionary, if that key has a specific value.
            </summary>
            <param name="key">Key</param>
            <param name="newValue">New value</param>
            <param name="comparisonValue">Old value</param>
            <returns>True if the value with key was equal to comparisonValue and was replaced with newValue; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ISharedDictionary`2.TryGetValue(`0,`1@)">
            <summary>
            Attempts to get the value associated with the specified key.
            </summary>
            <param name="key">Key</param>
            <param name="value">Value associated with the key, or the default value if the key does not exist</param>
            <returns>True if the key was found; otherwise, false.</returns>
        </member>
        <member name="P:Microsoft.PSharp.SharedObjects.ISharedDictionary`2.Item(`0)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
            <param name="key">Key</param>
            <returns>Value</returns>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ISharedDictionary`2.TryRemove(`0,`1@)">
            <summary>
            Removes the specified key from the dictionary.
            </summary>
            <param name="key">Key</param>
            <param name="value">Value associated with the key if present, or the default value otherwise.</param>
            <returns>True if the element is successfully removed; otherwise, false.</returns>
        </member>
        <member name="P:Microsoft.PSharp.SharedObjects.ISharedDictionary`2.Count">
            <summary>
            Gets the number of elements in the dictionary.
            </summary>
            <returns>Size</returns>
        </member>
        <member name="T:Microsoft.PSharp.SharedObjects.MockSharedDictionary`2">
            <summary>
            A wrapper for a shared dictionary modeled using a state-machine for testing.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.SharedObjects.MockSharedDictionary`2.DictionaryMachine">
            <summary>
            Machine modeling the shared dictionary.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.SharedObjects.MockSharedDictionary`2.Runtime">
            <summary>
            The testing runtime hosting this shared dictionary.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.MockSharedDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},Microsoft.PSharp.TestingServices.Runtime.SystematicTestingRuntime)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.SharedObjects.MockSharedDictionary`2"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.MockSharedDictionary`2.TryAdd(`0,`1)">
            <summary>
            Adds a new key to the dictionary, if it doesn’t already exist in the dictionary.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.MockSharedDictionary`2.TryUpdate(`0,`1,`1)">
            <summary>
            Updates the value for an existing key in the dictionary, if that key has a specific value.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.MockSharedDictionary`2.TryGetValue(`0,`1@)">
            <summary>
            Attempts to get the value associated with the specified key.
            </summary>
        </member>
        <member name="P:Microsoft.PSharp.SharedObjects.MockSharedDictionary`2.Item(`0)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.MockSharedDictionary`2.TryRemove(`0,`1@)">
            <summary>
            Removes the specified key from the dictionary.
            </summary>
        </member>
        <member name="P:Microsoft.PSharp.SharedObjects.MockSharedDictionary`2.Count">
            <summary>
            Gets the number of elements in the dictionary.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.SharedObjects.ProductionSharedDictionary`2">
            <summary>
            Implements a shared dictionary to be used in production.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.SharedObjects.ProductionSharedDictionary`2.Dictionary">
            <summary>
            The dictionary.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ProductionSharedDictionary`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.SharedObjects.ProductionSharedDictionary`2"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ProductionSharedDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.SharedObjects.ProductionSharedDictionary`2"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ProductionSharedDictionary`2.TryAdd(`0,`1)">
            <summary>
            Adds a new key to the dictionary, if it doesn’t already exist in the dictionary.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ProductionSharedDictionary`2.TryUpdate(`0,`1,`1)">
            <summary>
            Updates the value for an existing key in the dictionary, if that key has a specific value.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ProductionSharedDictionary`2.TryGetValue(`0,`1@)">
            <summary>
            Attempts to get the value associated with the specified key.
            </summary>
        </member>
        <member name="P:Microsoft.PSharp.SharedObjects.ProductionSharedDictionary`2.Item(`0)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ProductionSharedDictionary`2.TryRemove(`0,`1@)">
            <summary>
            Removes the specified key from the dictionary.
            </summary>
        </member>
        <member name="P:Microsoft.PSharp.SharedObjects.ProductionSharedDictionary`2.Count">
            <summary>
            Gets the number of elements in the dictionary.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.SharedObjects.SharedDictionary">
            <summary>
            Shared dictionary that can be safely shared by multiple P# machines.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedDictionary.Create``2(Microsoft.PSharp.IMachineRuntime)">
            <summary>
            Creates a new shared dictionary.
            </summary>
            <param name="runtime">The machine runtime.</param>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedDictionary.Create``2(System.Collections.Generic.IEqualityComparer{``0},Microsoft.PSharp.IMachineRuntime)">
            <summary>
            Creates a new shared dictionary.
            </summary>
            <param name="comparer">The key comparer.</param>
            <param name="runtime">The machine runtime.</param>
        </member>
        <member name="T:Microsoft.PSharp.SharedObjects.SharedDictionaryEvent">
            <summary>
            Event used to communicate with a shared counter machine.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.SharedObjects.SharedDictionaryEvent.SharedDictionaryOperation">
            <summary>
            Supported shared dictionary operations.
            </summary>
        </member>
        <member name="P:Microsoft.PSharp.SharedObjects.SharedDictionaryEvent.Operation">
            <summary>
            The operation stored in this event.
            </summary>
        </member>
        <member name="P:Microsoft.PSharp.SharedObjects.SharedDictionaryEvent.Key">
            <summary>
            The shared dictionary key stored in this event.
            </summary>
        </member>
        <member name="P:Microsoft.PSharp.SharedObjects.SharedDictionaryEvent.Value">
            <summary>
            The shared dictionary value stored in this event.
            </summary>
        </member>
        <member name="P:Microsoft.PSharp.SharedObjects.SharedDictionaryEvent.ComparisonValue">
            <summary>
            The shared dictionary comparison value stored in this event.
            </summary>
        </member>
        <member name="P:Microsoft.PSharp.SharedObjects.SharedDictionaryEvent.Sender">
            <summary>
            The sender machine stored in this event.
            </summary>
        </member>
        <member name="P:Microsoft.PSharp.SharedObjects.SharedDictionaryEvent.Comparer">
            <summary>
            The comparer stored in this event.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedDictionaryEvent.#ctor(Microsoft.PSharp.SharedObjects.SharedDictionaryEvent.SharedDictionaryOperation,System.Object,System.Object,System.Object,Microsoft.PSharp.MachineId,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.SharedObjects.SharedDictionaryEvent"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedDictionaryEvent.InitEvent(System.Object)">
            <summary>
            Creates a new event for the 'INIT' operation.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedDictionaryEvent.TryAddEvent(System.Object,System.Object,Microsoft.PSharp.MachineId)">
            <summary>
            Creates a new event for the 'TRYADD' operation.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedDictionaryEvent.TryUpdateEvent(System.Object,System.Object,System.Object,Microsoft.PSharp.MachineId)">
            <summary>
            Creates a new event for the 'TRYUPDATE' operation.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedDictionaryEvent.GetEvent(System.Object,Microsoft.PSharp.MachineId)">
            <summary>
            Creates a new event for the 'GET' operation.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedDictionaryEvent.TryGetEvent(System.Object,Microsoft.PSharp.MachineId)">
            <summary>
            Creates a new event for the 'TRYGET' operation.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedDictionaryEvent.SetEvent(System.Object,System.Object)">
            <summary>
            Creates a new event for the 'SET' operation.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedDictionaryEvent.CountEvent(Microsoft.PSharp.MachineId)">
            <summary>
            Creates a new event for the 'COUNT' operation.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedDictionaryEvent.TryRemoveEvent(System.Object,Microsoft.PSharp.MachineId)">
            <summary>
            Creates a new event for the 'TRYREMOVE' operation.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.SharedObjects.SharedDictionaryMachine`2">
            <summary>
            A shared dictionary modeled using a state-machine for testing.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.SharedObjects.SharedDictionaryMachine`2.Dictionary">
            <summary>
            The internal shared dictionary.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.SharedObjects.SharedDictionaryMachine`2.Init">
            <summary>
            The start state of this machine.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedDictionaryMachine`2.Initialize">
            <summary>
            Initializes the machine.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedDictionaryMachine`2.ProcessEvent">
            <summary>
            Processes the next dequeued event.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.SharedObjects.SharedDictionaryResponseEvent`1">
            <summary>
            Event containing the value of a shared dictionary.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.SharedObjects.SharedDictionaryResponseEvent`1.Value">
            <summary>
            Value.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedDictionaryResponseEvent`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.SharedObjects.SharedDictionaryResponseEvent`1"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.SharedObjects.ISharedRegister`1">
            <summary>
            Interface of a shared register.
            </summary>
            <typeparam name="T">Value type of the shared register</typeparam>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ISharedRegister`1.Update(System.Func{`0,`0})">
            <summary>
            Reads and updates the register.
            </summary>
            <param name="func">Update function</param>
            <returns>Resulting value of the register</returns>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ISharedRegister`1.GetValue">
            <summary>
            Gets current value of the register.
            </summary>
            <returns>Current value</returns>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ISharedRegister`1.SetValue(`0)">
            <summary>
            Sets current value of the register.
            </summary>
            <param name="value">Value</param>
        </member>
        <member name="T:Microsoft.PSharp.SharedObjects.MockSharedRegister`1">
            <summary>
            A wrapper for a shared register modeled using a state-machine for testing.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.SharedObjects.MockSharedRegister`1.RegisterMachine">
            <summary>
            Machine modeling the shared register.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.SharedObjects.MockSharedRegister`1.Runtime">
            <summary>
            The testing runtime hosting this shared register.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.MockSharedRegister`1.#ctor(`0,Microsoft.PSharp.TestingServices.Runtime.SystematicTestingRuntime)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.SharedObjects.MockSharedRegister`1"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.MockSharedRegister`1.Update(System.Func{`0,`0})">
            <summary>
            Reads and updates the register.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.MockSharedRegister`1.GetValue">
            <summary>
            Gets current value of the register.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.MockSharedRegister`1.SetValue(`0)">
            <summary>
            Sets current value of the register.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.SharedObjects.ProductionSharedRegister`1">
            <summary>
            Implements a shared register to be used in production.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.SharedObjects.ProductionSharedRegister`1.Value">
            <summary>
            Current value of the register.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ProductionSharedRegister`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.SharedObjects.ProductionSharedRegister`1"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ProductionSharedRegister`1.Update(System.Func{`0,`0})">
            <summary>
            Reads and updates the register.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ProductionSharedRegister`1.GetValue">
            <summary>
            Gets current value of the register.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.ProductionSharedRegister`1.SetValue(`0)">
            <summary>
            Sets current value of the register.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.SharedObjects.SharedRegister">
            <summary>
            Shared register that can be safely shared by multiple P# machines.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedRegister.Create``1(Microsoft.PSharp.IMachineRuntime,``0)">
            <summary>
            Creates a new shared register.
            </summary>
            <param name="runtime">The machine runtime.</param>
            <param name="value">The initial value.</param>
        </member>
        <member name="T:Microsoft.PSharp.SharedObjects.SharedRegisterEvent">
            <summary>
            Event used to communicate with a shared register machine.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.SharedObjects.SharedRegisterEvent.SharedRegisterOperation">
            <summary>
            Supported shared register operations.
            </summary>
        </member>
        <member name="P:Microsoft.PSharp.SharedObjects.SharedRegisterEvent.Operation">
            <summary>
            The operation stored in this event.
            </summary>
        </member>
        <member name="P:Microsoft.PSharp.SharedObjects.SharedRegisterEvent.Value">
            <summary>
            The shared register value stored in this event.
            </summary>
        </member>
        <member name="P:Microsoft.PSharp.SharedObjects.SharedRegisterEvent.Func">
            <summary>
            The shared register func stored in this event.
            </summary>
        </member>
        <member name="P:Microsoft.PSharp.SharedObjects.SharedRegisterEvent.Sender">
            <summary>
            The sender machine stored in this event.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedRegisterEvent.#ctor(Microsoft.PSharp.SharedObjects.SharedRegisterEvent.SharedRegisterOperation,System.Object,System.Object,Microsoft.PSharp.MachineId)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.SharedObjects.SharedRegisterEvent"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedRegisterEvent.UpdateEvent(System.Object,Microsoft.PSharp.MachineId)">
            <summary>
            Creates a new event for the 'UPDATE' operation.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedRegisterEvent.SetEvent(System.Object)">
            <summary>
            Creates a new event for the 'SET' operation.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedRegisterEvent.GetEvent(Microsoft.PSharp.MachineId)">
            <summary>
            Creates a new event for the 'GET' operation.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.SharedObjects.SharedRegisterMachine`1">
            <summary>
            A shared register modeled using a state-machine for testing.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.SharedObjects.SharedRegisterMachine`1.Value">
            <summary>
            The value of the shared register.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.SharedObjects.SharedRegisterMachine`1.Init">
            <summary>
            The start state of this machine.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedRegisterMachine`1.Initialize">
            <summary>
            Initializes the machine.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedRegisterMachine`1.ProcessEvent">
            <summary>
            Processes the next dequeued event.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.SharedObjects.SharedRegisterResponseEvent`1">
            <summary>
            Event containing the value of a shared register.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.SharedObjects.SharedRegisterResponseEvent`1.Value">
            <summary>
            Value.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.SharedObjects.SharedRegisterResponseEvent`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.SharedObjects.SharedRegisterResponseEvent`1"/> class.
            </summary>
        </member>
    </members>
</doc>
