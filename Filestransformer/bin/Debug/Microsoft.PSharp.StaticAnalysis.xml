<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.PSharp.StaticAnalysis</name>
    </assembly>
    <members>
        <member name="T:Microsoft.PSharp.StaticAnalysis.DirectAccessAnalysisPass">
            <summary>
            This analysis pass checks if any P# machine contains fields
            or methods that can be publicly accessed.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.DirectAccessAnalysisPass.Create(Microsoft.PSharp.DataFlowAnalysis.AnalysisContext,Microsoft.PSharp.Configuration,Microsoft.PSharp.IO.ILogger,Microsoft.PSharp.StaticAnalysis.ErrorReporter)">
            <summary>
            Creates a new direct access analysis pass.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.DirectAccessAnalysisPass.Run(System.Collections.Generic.ISet{Microsoft.PSharp.StaticAnalysis.StateMachine})">
            <summary>
            Runs the analysis on the specified machines.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.DirectAccessAnalysisPass.#ctor(Microsoft.PSharp.DataFlowAnalysis.AnalysisContext,Microsoft.PSharp.Configuration,Microsoft.PSharp.IO.ILogger,Microsoft.PSharp.StaticAnalysis.ErrorReporter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.StaticAnalysis.DirectAccessAnalysisPass"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.DirectAccessAnalysisPass.CheckFields(System.Collections.Generic.ISet{Microsoft.PSharp.StaticAnalysis.StateMachine})">
            <summary>
            Checks the fields of each machine and report warnings if
            any field is not private or protected.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.DirectAccessAnalysisPass.CheckMethods(System.Collections.Generic.ISet{Microsoft.PSharp.StaticAnalysis.StateMachine})">
            <summary>
            Checks the methods of each machine and report warnings if
            any method is directly accessed by anything else than the
            P# runtime.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.DirectAccessAnalysisPass.PrintProfilingResults">
            <summary>
            Prints profiling results.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.StaticAnalysis.NoGenericStatesAnalysisPass">
            <summary>
            This analysis pass checks if any P# machine contains
            states that are declared as generic.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.NoGenericStatesAnalysisPass.Create(Microsoft.PSharp.DataFlowAnalysis.AnalysisContext,Microsoft.PSharp.Configuration,Microsoft.PSharp.IO.ILogger,Microsoft.PSharp.StaticAnalysis.ErrorReporter)">
            <summary>
            Creates a new generic machine analysis pass.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.NoGenericStatesAnalysisPass.Run(System.Collections.Generic.ISet{Microsoft.PSharp.StaticAnalysis.StateMachine})">
            <summary>
            Runs the analysis on the specified machines.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.NoGenericStatesAnalysisPass.#ctor(Microsoft.PSharp.DataFlowAnalysis.AnalysisContext,Microsoft.PSharp.Configuration,Microsoft.PSharp.IO.ILogger,Microsoft.PSharp.StaticAnalysis.ErrorReporter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.StaticAnalysis.NoGenericStatesAnalysisPass"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.NoGenericStatesAnalysisPass.CheckStates(System.Collections.Generic.ISet{Microsoft.PSharp.StaticAnalysis.StateMachine})">
            <summary>
            Checks the states of each machine and report warnings if
            any state is declared as generic.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.NoGenericStatesAnalysisPass.PrintProfilingResults">
            <summary>
            Prints profiling results.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.StaticAnalysis.GivesUpOwnershipAnalysisPass">
            <summary>
            This analysis checks if any method in each machine of a P# program
            is erroneously giving up ownership of references.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.GivesUpOwnershipAnalysisPass.Create(Microsoft.PSharp.DataFlowAnalysis.AnalysisContext,Microsoft.PSharp.Configuration,Microsoft.PSharp.IO.ILogger,Microsoft.PSharp.StaticAnalysis.ErrorReporter)">
            <summary>
            Creates a new gives-up ownership analysis pass.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.GivesUpOwnershipAnalysisPass.AnalyzeOwnershipInControlFlowGraph(Microsoft.PSharp.DataFlowAnalysis.GivenUpOwnershipSymbol,Microsoft.PSharp.StaticAnalysis.StateMachine,Microsoft.CodeAnalysis.SemanticModel,Microsoft.PSharp.StaticAnalysis.TraceInfo)">
            <summary>
            Analyzes the ownership of the given-up symbol
            in the control-flow graph.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.GivesUpOwnershipAnalysisPass.AnalyzeOwnershipInLocalDeclaration(Microsoft.PSharp.DataFlowAnalysis.GivenUpOwnershipSymbol,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.PSharp.DataFlowAnalysis.Statement,Microsoft.PSharp.StaticAnalysis.StateMachine,Microsoft.CodeAnalysis.SemanticModel,Microsoft.PSharp.StaticAnalysis.TraceInfo)">
            <summary>
            Analyzes the ownership of the given-up symbol in the variable declaration.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.GivesUpOwnershipAnalysisPass.AnalyzeOwnershipInAssignment(Microsoft.PSharp.DataFlowAnalysis.GivenUpOwnershipSymbol,Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax,Microsoft.PSharp.DataFlowAnalysis.Statement,Microsoft.PSharp.StaticAnalysis.StateMachine,Microsoft.CodeAnalysis.SemanticModel,Microsoft.PSharp.StaticAnalysis.TraceInfo)">
            <summary>
            Analyzes the ownership of the given-up symbol in the assignment expression.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.GivesUpOwnershipAnalysisPass.AnalyzeOwnershipInCandidateCallee(Microsoft.PSharp.DataFlowAnalysis.GivenUpOwnershipSymbol,Microsoft.PSharp.DataFlowAnalysis.MethodSummary,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.PSharp.DataFlowAnalysis.Statement,Microsoft.PSharp.StaticAnalysis.StateMachine,Microsoft.CodeAnalysis.SemanticModel,Microsoft.PSharp.StaticAnalysis.TraceInfo)">
            <summary>
            Analyzes the ownership of the given-up symbol in the candidate callee.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.GivesUpOwnershipAnalysisPass.AnalyzeOwnershipInGivesUpCall(Microsoft.PSharp.DataFlowAnalysis.GivenUpOwnershipSymbol,Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax,Microsoft.PSharp.DataFlowAnalysis.Statement,Microsoft.PSharp.StaticAnalysis.StateMachine,Microsoft.CodeAnalysis.SemanticModel,Microsoft.PSharp.StaticAnalysis.TraceInfo)">
            <summary>
            Analyzes the ownership of the given-up symbol in the gives-up operation.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.GivesUpOwnershipAnalysisPass.#ctor(Microsoft.PSharp.DataFlowAnalysis.AnalysisContext,Microsoft.PSharp.Configuration,Microsoft.PSharp.IO.ILogger,Microsoft.PSharp.StaticAnalysis.ErrorReporter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.StaticAnalysis.GivesUpOwnershipAnalysisPass"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.GivesUpOwnershipAnalysisPass.AnalyzeOwnershipInExpression(Microsoft.PSharp.DataFlowAnalysis.GivenUpOwnershipSymbol,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.PSharp.DataFlowAnalysis.Statement,Microsoft.PSharp.StaticAnalysis.StateMachine,Microsoft.CodeAnalysis.SemanticModel,Microsoft.PSharp.StaticAnalysis.TraceInfo)">
            <summary>
            Analyzes the ownership of the given-up symbol in the expression.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.GivesUpOwnershipAnalysisPass.AnalyzeGivingUpFieldOwnership(Microsoft.PSharp.DataFlowAnalysis.GivenUpOwnershipSymbol,Microsoft.CodeAnalysis.ISymbol,Microsoft.PSharp.DataFlowAnalysis.Statement,Microsoft.PSharp.StaticAnalysis.StateMachine,Microsoft.PSharp.StaticAnalysis.TraceInfo)">
            <summary>
            Analyzes the given-up ownership of fields in the expression.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.GivesUpOwnershipAnalysisPass.PrintProfilingResults">
            <summary>
            Prints profiling results.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.StaticAnalysis.OwnershipAnalysisPass">
            <summary>
            Implementation of an abstract ownership analysis pass.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.OwnershipAnalysisPass.Run(System.Collections.Generic.ISet{Microsoft.PSharp.StaticAnalysis.StateMachine})">
            <summary>
            Runs the analysis on the specified machines.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.OwnershipAnalysisPass.#ctor(Microsoft.PSharp.DataFlowAnalysis.AnalysisContext,Microsoft.PSharp.Configuration,Microsoft.PSharp.IO.ILogger,Microsoft.PSharp.StaticAnalysis.ErrorReporter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.StaticAnalysis.OwnershipAnalysisPass"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.OwnershipAnalysisPass.AnalyzeOwnershipInControlFlowGraph(Microsoft.PSharp.DataFlowAnalysis.GivenUpOwnershipSymbol,Microsoft.PSharp.StaticAnalysis.StateMachine,Microsoft.CodeAnalysis.SemanticModel,Microsoft.PSharp.StaticAnalysis.TraceInfo)">
            <summary>
            Analyzes the ownership of the given-up symbol
            in the control-flow graph.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.OwnershipAnalysisPass.AnalyzeOwnershipInStatement(Microsoft.PSharp.DataFlowAnalysis.GivenUpOwnershipSymbol,Microsoft.PSharp.DataFlowAnalysis.Statement,Microsoft.PSharp.StaticAnalysis.StateMachine,Microsoft.CodeAnalysis.SemanticModel,Microsoft.PSharp.StaticAnalysis.TraceInfo)">
            <summary>
            Analyzes the ownership of the given-up symbol
            in the control-flow graph node.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.OwnershipAnalysisPass.AnalyzeOwnershipInLocalDeclaration(Microsoft.PSharp.DataFlowAnalysis.GivenUpOwnershipSymbol,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.PSharp.DataFlowAnalysis.Statement,Microsoft.PSharp.StaticAnalysis.StateMachine,Microsoft.CodeAnalysis.SemanticModel,Microsoft.PSharp.StaticAnalysis.TraceInfo)">
            <summary>
            Analyzes the ownership of the given-up symbol in the variable declaration.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.OwnershipAnalysisPass.AnalyzeOwnershipInAssignment(Microsoft.PSharp.DataFlowAnalysis.GivenUpOwnershipSymbol,Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax,Microsoft.PSharp.DataFlowAnalysis.Statement,Microsoft.PSharp.StaticAnalysis.StateMachine,Microsoft.CodeAnalysis.SemanticModel,Microsoft.PSharp.StaticAnalysis.TraceInfo)">
            <summary>
            Analyzes the ownership of the given-up symbol in the assignment expression.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.OwnershipAnalysisPass.AnalyzeOwnershipInCall(Microsoft.PSharp.DataFlowAnalysis.GivenUpOwnershipSymbol,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.PSharp.DataFlowAnalysis.Statement,Microsoft.PSharp.StaticAnalysis.StateMachine,Microsoft.CodeAnalysis.SemanticModel,Microsoft.PSharp.StaticAnalysis.TraceInfo)">
            <summary>
            Analyzes the ownership of the given-up symbol in the call.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.OwnershipAnalysisPass.AnalyzeOwnershipInCandidateCallee(Microsoft.PSharp.DataFlowAnalysis.GivenUpOwnershipSymbol,Microsoft.PSharp.DataFlowAnalysis.MethodSummary,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.PSharp.DataFlowAnalysis.Statement,Microsoft.PSharp.StaticAnalysis.StateMachine,Microsoft.CodeAnalysis.SemanticModel,Microsoft.PSharp.StaticAnalysis.TraceInfo)">
            <summary>
            Analyzes the ownership of the given-up symbol in the candidate callee.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.OwnershipAnalysisPass.AnalyzeOwnershipInGivesUpCall(Microsoft.PSharp.DataFlowAnalysis.GivenUpOwnershipSymbol,Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax,Microsoft.PSharp.DataFlowAnalysis.Statement,Microsoft.PSharp.StaticAnalysis.StateMachine,Microsoft.CodeAnalysis.SemanticModel,Microsoft.PSharp.StaticAnalysis.TraceInfo)">
            <summary>
            Analyzes the ownership of the given-up symbol in the gives-up operation.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.OwnershipAnalysisPass.AnalyzeMethodSummariesInMachine(Microsoft.PSharp.StaticAnalysis.StateMachine)">
            <summary>
            Analyzes the method summaries of the machine to check if
            each summary respects given-up ownerships.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.OwnershipAnalysisPass.IsFieldAccessedInSuccessor(Microsoft.CodeAnalysis.IFieldSymbol,Microsoft.PSharp.DataFlowAnalysis.MethodSummary,Microsoft.PSharp.StaticAnalysis.StateMachine)">
            <summary>
            Returns true if the field symbol is being accessed in a successor summary.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.OwnershipAnalysisPass.ExtractArguments(System.Collections.Generic.List{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax})">
            <summary>
            Extracts arguments from the list of arguments.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.StaticAnalysis.RespectsOwnershipAnalysisPass">
            <summary>
            This analysis checks that all methods in each machine of a P#
            program respect given-up ownerships.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.RespectsOwnershipAnalysisPass.Create(Microsoft.PSharp.DataFlowAnalysis.AnalysisContext,Microsoft.PSharp.Configuration,Microsoft.PSharp.IO.ILogger,Microsoft.PSharp.StaticAnalysis.ErrorReporter)">
            <summary>
            Creates a new respects ownership analysis pass.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.RespectsOwnershipAnalysisPass.AnalyzeOwnershipInControlFlowGraph(Microsoft.PSharp.DataFlowAnalysis.GivenUpOwnershipSymbol,Microsoft.PSharp.StaticAnalysis.StateMachine,Microsoft.CodeAnalysis.SemanticModel,Microsoft.PSharp.StaticAnalysis.TraceInfo)">
            <summary>
            Analyzes the ownership of the given-up symbol in the control-flow graph.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.RespectsOwnershipAnalysisPass.AnalyzeOwnershipInLocalDeclaration(Microsoft.PSharp.DataFlowAnalysis.GivenUpOwnershipSymbol,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.PSharp.DataFlowAnalysis.Statement,Microsoft.PSharp.StaticAnalysis.StateMachine,Microsoft.CodeAnalysis.SemanticModel,Microsoft.PSharp.StaticAnalysis.TraceInfo)">
            <summary>
            Analyzes the ownership of the given-up symbol in the variable declaration.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.RespectsOwnershipAnalysisPass.AnalyzeOwnershipInAssignment(Microsoft.PSharp.DataFlowAnalysis.GivenUpOwnershipSymbol,Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax,Microsoft.PSharp.DataFlowAnalysis.Statement,Microsoft.PSharp.StaticAnalysis.StateMachine,Microsoft.CodeAnalysis.SemanticModel,Microsoft.PSharp.StaticAnalysis.TraceInfo)">
            <summary>
            Analyzes the ownership of the given-up symbol in the assignment expression.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.RespectsOwnershipAnalysisPass.AnalyzeOwnershipInCandidateCallee(Microsoft.PSharp.DataFlowAnalysis.GivenUpOwnershipSymbol,Microsoft.PSharp.DataFlowAnalysis.MethodSummary,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.PSharp.DataFlowAnalysis.Statement,Microsoft.PSharp.StaticAnalysis.StateMachine,Microsoft.CodeAnalysis.SemanticModel,Microsoft.PSharp.StaticAnalysis.TraceInfo)">
            <summary>
            Analyzes the ownership of the given-up symbol in the candidate callee.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.RespectsOwnershipAnalysisPass.AnalyzeOwnershipInGivesUpCall(Microsoft.PSharp.DataFlowAnalysis.GivenUpOwnershipSymbol,Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax,Microsoft.PSharp.DataFlowAnalysis.Statement,Microsoft.PSharp.StaticAnalysis.StateMachine,Microsoft.CodeAnalysis.SemanticModel,Microsoft.PSharp.StaticAnalysis.TraceInfo)">
            <summary>
            Analyzes the ownership of the given-up symbol in the gives-up operation.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.RespectsOwnershipAnalysisPass.#ctor(Microsoft.PSharp.DataFlowAnalysis.AnalysisContext,Microsoft.PSharp.Configuration,Microsoft.PSharp.IO.ILogger,Microsoft.PSharp.StaticAnalysis.ErrorReporter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.StaticAnalysis.RespectsOwnershipAnalysisPass"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.RespectsOwnershipAnalysisPass.AnalyzeOwnershipInExpression(Microsoft.PSharp.DataFlowAnalysis.GivenUpOwnershipSymbol,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.PSharp.DataFlowAnalysis.Statement,Microsoft.CodeAnalysis.SemanticModel,Microsoft.PSharp.StaticAnalysis.TraceInfo)">
            <summary>
            Analyzes the ownership of the given-up symbol in the expression.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.RespectsOwnershipAnalysisPass.PrintProfilingResults">
            <summary>
            Prints profiling results.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.StaticAnalysis.StateMachineAnalysisPass">
            <summary>
            Implementation of an abstract state-machine analysis pass.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.StateMachineAnalysisPass.AnalysisContext">
            <summary>
            The analysis context.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.StateMachineAnalysisPass.Configuration">
            <summary>
            Configuration.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.StateMachineAnalysisPass.Logger">
            <summary>
            The installed logger.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.StateMachineAnalysisPass.ErrorReporter">
            <summary>
            The error reporter.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.StateMachineAnalysisPass.Profiler">
            <summary>
            The analysis pass profiler.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.StateMachineAnalysisPass.Run(System.Collections.Generic.ISet{Microsoft.PSharp.StaticAnalysis.StateMachine})">
            <summary>
            Runs the analysis on the specified machines.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.StateMachineAnalysisPass.#ctor(Microsoft.PSharp.DataFlowAnalysis.AnalysisContext,Microsoft.PSharp.Configuration,Microsoft.PSharp.IO.ILogger,Microsoft.PSharp.StaticAnalysis.ErrorReporter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.StaticAnalysis.StateMachineAnalysisPass"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.StateMachineAnalysisPass.PrintProfilingResults">
            <summary>
            Prints profiling results.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.StaticAnalysis.StaticAnalysisEngine">
            <summary>
            A P# static analysis engine.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.StaticAnalysisEngine.CompilationContext">
            <summary>
            The compilation context.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.StaticAnalysisEngine.Logger">
            <summary>
            The installed logger.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.StaticAnalysisEngine.Profiler">
            <summary>
            The overall runtime profiler.
            </summary>
        </member>
        <member name="P:Microsoft.PSharp.StaticAnalysis.StaticAnalysisEngine.ErrorReporter">
            <summary>
            The error reporter.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.StaticAnalysisEngine.Create(Microsoft.PSharp.LanguageServices.Compilation.CompilationContext)">
            <summary>
            Creates a P# static analysis engine.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.StaticAnalysisEngine.Create(Microsoft.PSharp.LanguageServices.Compilation.CompilationContext,Microsoft.PSharp.IO.ILogger)">
            <summary>
            Creates a P# static analysis engine.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.StaticAnalysisEngine.Run">
            <summary>
            Runs the P# static analysis engine.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.StaticAnalysisEngine.#ctor(Microsoft.PSharp.LanguageServices.Compilation.CompilationContext,Microsoft.PSharp.IO.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.StaticAnalysis.StaticAnalysisEngine"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.StaticAnalysisEngine.AnalyzeProject(Microsoft.CodeAnalysis.Project)">
            <summary>
            Analyzes the given P# project.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.StaticAnalysisEngine.PerformErrorChecking(Microsoft.PSharp.DataFlowAnalysis.AnalysisContext)">
            <summary>
            Performs error checking on the P# compilation. It
            reports any found diagnostics and exits.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.StaticAnalysisEngine.RegisterImmutableTypes(Microsoft.PSharp.DataFlowAnalysis.AnalysisContext)">
            <summary>
            Registers immutable types.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.StaticAnalysisEngine.RegisterGivesUpOwnershipOperations(Microsoft.PSharp.DataFlowAnalysis.AnalysisContext)">
            <summary>
            Registers gives-up ownership operations.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.StaticAnalysis.MachineSummarizationPass">
            <summary>
            This analysis pass computes the summaries for
            each machine of a P# program.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.MachineSummarizationPass.Create(Microsoft.PSharp.DataFlowAnalysis.AnalysisContext,Microsoft.PSharp.Configuration,Microsoft.PSharp.IO.ILogger,Microsoft.PSharp.StaticAnalysis.ErrorReporter)">
            <summary>
            Creates a new machine summarization pass.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.MachineSummarizationPass.Run(System.Collections.Generic.ISet{Microsoft.PSharp.StaticAnalysis.StateMachine})">
            <summary>
            Runs the analysis on the specified machines.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.MachineSummarizationPass.#ctor(Microsoft.PSharp.DataFlowAnalysis.AnalysisContext,Microsoft.PSharp.Configuration,Microsoft.PSharp.IO.ILogger,Microsoft.PSharp.StaticAnalysis.ErrorReporter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.StaticAnalysis.MachineSummarizationPass"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.MachineSummarizationPass.SummarizeStateMachines(System.Collections.Generic.ISet{Microsoft.PSharp.StaticAnalysis.StateMachine})">
            <summary>
            Summarizes the state-machines in the project.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.MachineSummarizationPass.ComputeStateMachineInheritanceInformation(System.Collections.Generic.ISet{Microsoft.PSharp.StaticAnalysis.StateMachine})">
            <summary>
            Computes the state-machine inheritance information for all
            state-machines in the project.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.MachineSummarizationPass.PrintSummarizationInformation(System.Collections.Generic.ISet{Microsoft.PSharp.StaticAnalysis.StateMachine})">
            <summary>
            Prints summarization information.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.MachineSummarizationPass.PrintProfilingResults">
            <summary>
            Prints profiling results.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.StaticAnalysis.MachineAction">
            <summary>
            An abstract P# machine action.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.MachineAction.State">
            <summary>
            The parent state.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.MachineAction.Name">
            <summary>
            Name of the machine action.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.MachineAction.MethodDeclaration">
            <summary>
            Underlying method declaration.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.MachineAction.#ctor(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.PSharp.StaticAnalysis.MachineState)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.StaticAnalysis.MachineAction"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.StaticAnalysis.MachineState">
            <summary>
            A P# machine state.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.MachineState.AnalysisContext">
            <summary>
            The analysis context.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.MachineState.Machine">
            <summary>
            The parent state-machine.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.MachineState.Name">
            <summary>
            Name of the state.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.MachineState.Declaration">
            <summary>
            The underlying declaration.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.MachineState.StateTransitions">
            <summary>
            List of state-transitions in the state.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.MachineState.MachineActions">
            <summary>
            List of actions in the state.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.MachineState.IsStart">
            <summary>
            True if this is the start state.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.MachineState.#ctor(Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax,Microsoft.PSharp.StaticAnalysis.StateMachine,Microsoft.PSharp.DataFlowAnalysis.AnalysisContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.StaticAnalysis.MachineState"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.MachineState.Analyze">
            <summary>
            Analyzes the state.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.MachineState.GetSuccessorStates">
            <summary>
            Returns the successor states.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.MachineState.IsStartState">
            <summary>
            Checks if this is the start state.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.MachineState.FindAllActions">
            <summary>
            Finds all state-machine actions for each state-machine in the project.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.MachineState.FindAllTransitions">
            <summary>
            Finds all state-transitions for each state-machine in the project.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.MachineState.GetActionFromExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)">
            <summary>
            Returns the action from the given expression.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.MachineState.GetStateFromExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel)">
            <summary>
            Returns the state from the given expression.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.StaticAnalysis.OnEntryMachineAction">
            <summary>
            The P# on entry machine action.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.OnEntryMachineAction.#ctor(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.PSharp.StaticAnalysis.MachineState)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.StaticAnalysis.OnEntryMachineAction"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.StaticAnalysis.OnEventDoMachineAction">
            <summary>
            The P# on event do machine action.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.OnEventDoMachineAction.#ctor(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.PSharp.StaticAnalysis.MachineState)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.StaticAnalysis.OnEventDoMachineAction"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.StaticAnalysis.OnEventGotoMachineAction">
            <summary>
            The P# on event goto machine action.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.OnEventGotoMachineAction.#ctor(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.PSharp.StaticAnalysis.MachineState)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.StaticAnalysis.OnEventGotoMachineAction"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.StaticAnalysis.OnEventPushMachineAction">
            <summary>
            The P# on event push machine action.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.OnEventPushMachineAction.#ctor(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.PSharp.StaticAnalysis.MachineState)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.StaticAnalysis.OnEventPushMachineAction"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.StaticAnalysis.OnExitMachineAction">
            <summary>
            The P# on exit machine action.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.OnExitMachineAction.#ctor(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.PSharp.StaticAnalysis.MachineState)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.StaticAnalysis.OnExitMachineAction"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.StaticAnalysis.StateMachine">
            <summary>
            A P# state-machine.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.StateMachine.AnalysisContext">
            <summary>
            The analysis context.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.StateMachine.Name">
            <summary>
            Name of the state-machine.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.StateMachine.Declaration">
            <summary>
            The underlying declaration.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.StateMachine.BaseMachines">
            <summary>
            Set of base machines.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.StateMachine.MachineStates">
            <summary>
            Set of states in the machine.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.StateMachine.MethodSummaries">
            <summary>
            Map of method summaries in the machine.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.StateMachine.IsAbstract">
            <summary>
            True if the machine is abstract.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.StateMachine.#ctor(Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax,Microsoft.PSharp.DataFlowAnalysis.AnalysisContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.StaticAnalysis.StateMachine"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.StateMachine.Summarize">
            <summary>
            Summarizes the state-machine.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.StateMachine.GetSuccessorSummaries(Microsoft.PSharp.DataFlowAnalysis.MethodSummary)">
            <summary>
            Returns all the successor summaries.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.StateMachine.FindAllStates">
            <summary>
            Finds all states in the machine.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.StateMachine.AnalyzeAllStates">
            <summary>
            Analyzes all states in the machine.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.StateMachine.SummarizeMethod(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax)">
            <summary>
            Computes the summary for the specified method.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.StateMachine.GetMethodDeclarations">
            <summary>
            Returns all available method declarations.
            </summary>
            <returns>MethodDeclarationSyntaxs</returns>
        </member>
        <member name="T:Microsoft.PSharp.StaticAnalysis.StateTransition">
            <summary>
            A P# state-transition.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.StateTransition.AnalysisContext">
            <summary>
            The analysis context.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.StateTransition.State">
            <summary>
            The parent state.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.StateTransition.TargetState">
            <summary>
            The target state.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.StateTransition.#ctor(Microsoft.PSharp.StaticAnalysis.MachineState,Microsoft.PSharp.StaticAnalysis.MachineState,Microsoft.PSharp.DataFlowAnalysis.AnalysisContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.StaticAnalysis.StateTransition"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.StaticAnalysis.CallTraceStep">
            <summary>
            Class implementing a call trace step.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.CallTraceStep.Method">
            <summary>
            The method declaration.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.CallTraceStep.Invocation">
            <summary>
            The invocation expression.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.CallTraceStep.#ctor(Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.StaticAnalysis.CallTraceStep"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.StaticAnalysis.ErrorTraceStep">
            <summary>
            Class implementing an error trace step.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.ErrorTraceStep.Expression">
            <summary>
            The expression.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.ErrorTraceStep.File">
            <summary>
            The file name.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.ErrorTraceStep.Line">
            <summary>
            The line number.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.ErrorTraceStep.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.StaticAnalysis.ErrorTraceStep"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.StaticAnalysis.TraceInfo">
            <summary>
            Static trace information.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.TraceInfo.ErrorTrace">
            <summary>
            Error trace.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.TraceInfo.CallTrace">
            <summary>
            Call trace.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.TraceInfo.Method">
            <summary>
            The method where the trace begins.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.TraceInfo.Machine">
            <summary>
            The machine where the trace begins.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.TraceInfo.State">
            <summary>
            The state where the trace begins.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.TraceInfo.Payload">
            <summary>
            The corresponding payload of the trace.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.TraceInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.StaticAnalysis.TraceInfo"/> class.
            Constructor.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.TraceInfo.#ctor(Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax,Microsoft.PSharp.StaticAnalysis.StateMachine,Microsoft.PSharp.StaticAnalysis.MachineState,Microsoft.CodeAnalysis.ISymbol)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.StaticAnalysis.TraceInfo"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.TraceInfo.AddErrorTrace(Microsoft.CodeAnalysis.SyntaxNode)">
            <summary>
            Adds new error trace to the trace for
            the specified syntax node.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.TraceInfo.AddErrorTrace(Microsoft.CodeAnalysis.SyntaxToken)">
            <summary>
            Adds new error trace to the trace for
            the specified syntax token.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.TraceInfo.InsertCall(Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)">
            <summary>
            Inserts a new call to the trace.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.TraceInfo.Merge(Microsoft.PSharp.StaticAnalysis.TraceInfo)">
            <summary>
            Merges the given trace to the current trace.
            </summary>
        </member>
        <member name="T:Microsoft.PSharp.StaticAnalysis.ErrorReporter">
            <summary>
            Reports static analysis errors and warnings to the user.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.ErrorReporter.Configuration">
            <summary>
            Configuration.
            </summary>
        </member>
        <member name="F:Microsoft.PSharp.StaticAnalysis.ErrorReporter.EnableColoredConsoleOutput">
            <summary>
            Enables colored console output.
            </summary>
        </member>
        <member name="P:Microsoft.PSharp.StaticAnalysis.ErrorReporter.Logger">
            <summary>
            The installed logger.
            </summary>
        </member>
        <member name="P:Microsoft.PSharp.StaticAnalysis.ErrorReporter.ReportedMessages">
            <summary>
            Set of reported messages;
            </summary>
        </member>
        <member name="P:Microsoft.PSharp.StaticAnalysis.ErrorReporter.ErrorCount">
            <summary>
            Number of errors discovered in the analysis.
            </summary>
        </member>
        <member name="P:Microsoft.PSharp.StaticAnalysis.ErrorReporter.WarningCount">
            <summary>
            Number of warnings reported by the analysis.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.ErrorReporter.#ctor(Microsoft.PSharp.Configuration,Microsoft.PSharp.IO.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.PSharp.StaticAnalysis.ErrorReporter"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.ErrorReporter.GetStats">
            <summary>
            Returns the static analysis error statistics.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.ErrorReporter.Report(System.String)">
            <summary>
            Reports an error to the user.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.ErrorReporter.Report(System.String,System.Object[])">
            <summary>
            Reports an error to the user.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.ErrorReporter.Report(System.String,System.ConsoleColor)">
            <summary>
            Reports a generic error to the user using the specified color.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.ErrorReporter.Report(Microsoft.PSharp.StaticAnalysis.TraceInfo,System.String)">
            <summary>
            Reports an error to the user.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.ErrorReporter.ReportWarning(System.String)">
            <summary>
            Reports a warning to the user.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.ErrorReporter.ReportWarning(System.String,System.Object[])">
            <summary>
            Reports a warning to the user.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.ErrorReporter.ReportWarning(Microsoft.PSharp.StaticAnalysis.TraceInfo,System.String)">
            <summary>
            Reports a warning to the user.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.ErrorReporter.ReportWarning(Microsoft.PSharp.StaticAnalysis.TraceInfo,System.String,System.Object[])">
            <summary>
            Reports a warning to the user.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.ErrorReporter.ReportGivenUpOwnershipAccess(Microsoft.PSharp.StaticAnalysis.TraceInfo)">
            <summary>
            Reports an access of an object with given-up ownership.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.ErrorReporter.ReportGivenUpOwnershipFieldAccess(Microsoft.PSharp.StaticAnalysis.TraceInfo,Microsoft.CodeAnalysis.IFieldSymbol)">
            <summary>
            Reports an access of a field that is alias of an object with given-up ownership.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.ErrorReporter.ReportGivenUpFieldOwnershipError(Microsoft.PSharp.StaticAnalysis.TraceInfo,Microsoft.CodeAnalysis.ISymbol)">
            <summary>
            Reports a given up field ownership error.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.ErrorReporter.ReportGivenUpOwnershipFieldAssignment(Microsoft.PSharp.StaticAnalysis.TraceInfo,Microsoft.CodeAnalysis.ISymbol)">
            <summary>
            Reports assignment of given up ownership to a machine field.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.ErrorReporter.ReportGivenUpOwnershipSending(Microsoft.PSharp.StaticAnalysis.TraceInfo,Microsoft.CodeAnalysis.ISymbol)">
            <summary>
            Reports sending data with a given up ownership.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.ErrorReporter.ReportExternalInvocation(Microsoft.PSharp.StaticAnalysis.TraceInfo)">
            <summary>
            Reports calling a method with unavailable source code,
            thus cannot be further analyzed.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.ErrorReporter.ReportUnknownVirtualCall(Microsoft.PSharp.StaticAnalysis.TraceInfo)">
            <summary>
            Reports calling a virtual method with unknown overrider,
            thus cannot be further analyzed.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.ErrorReporter.ReportErrorTrace(Microsoft.PSharp.StaticAnalysis.TraceInfo,System.String,System.Boolean)">
            <summary>
            Reports an error to the user.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.ErrorReporter.ReportWarningTrace(Microsoft.PSharp.StaticAnalysis.TraceInfo,System.String)">
            <summary>
            Reports a warning to the user.
            </summary>
        </member>
        <member name="M:Microsoft.PSharp.StaticAnalysis.ErrorReporter.PrintTrace(Microsoft.PSharp.StaticAnalysis.TraceInfo)">
            <summary>
            Prints the trace.
            </summary>
        </member>
    </members>
</doc>
